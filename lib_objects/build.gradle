apply from:'../gradle_files/base.gradle'
apply plugin: 'com.google.protobuf'

android {
    sourceSets {
        main {
            // 定义proto文件目录
            proto {
                srcDir 'src/main/proto'
            }
        }
    }
}

dependencies {
    def PROTOBUF_VERSION = "3.0.0"

    api "com.google.protobuf:protobuf-java:${PROTOBUF_VERSION}"
    api "com.google.protobuf:protoc:${PROTOBUF_VERSION}"
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.2.0' }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each {
            task -> task.plugins { javalite {} }
        }
    }
}

// 是否允许Proto生成DTO类
//def enableGenerateProto = true
 def enableGenerateProto = false

project.tasks.whenTaskAdded { Task task ->
    if (task.name == 'generateDebugProto') {
        task.enabled = enableGenerateProto
        if(task.enabled) {
            task.doLast {
                // 复制Build目录下的DTO类到Src目录
                copy {
                    from 'build/generated/source/proto/debug/javalite'
                    into 'src/main/java'
                }
                // 删除Build目录下的DTO类
                FileTree tree = fileTree("build/generated/source/proto/debug/javalite")
                tree.each{
                    file -> delete file
                }
            }
        }
    }
}
